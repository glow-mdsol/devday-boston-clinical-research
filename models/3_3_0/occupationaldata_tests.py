#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
#  Generated from FHIR 3.3.0 on 2018-05-12.
#  2018, SMART Health IT.


import os
import io
import unittest
import json
from . import occupationaldata
from .fhirdate import FHIRDate


class OccupationalDataTests(unittest.TestCase):
    def instantiate_from(self, filename):
        datadir = os.environ.get('FHIR_UNITTEST_DATADIR') or ''
        with io.open(os.path.join(datadir, filename), 'r', encoding='utf-8') as handle:
            js = json.load(handle)
            self.assertEqual("OccupationalData", js["resourceType"])
        return occupationaldata.OccupationalData(js)
    
    def testOccupationalData1(self):
        inst = self.instantiate_from("occupationaldata-example.json")
        self.assertIsNotNone(inst, "Must have instantiated a OccupationalData instance")
        self.implOccupationalData1(inst)
        
        js = inst.as_json()
        self.assertEqual("OccupationalData", js["resourceType"])
        inst2 = occupationaldata.OccupationalData(js)
        self.implOccupationalData1(inst2)
    
    def implOccupationalData1(self, inst):
        self.assertEqual(inst.combatZonePeriod[0].end.date, FHIRDate("1983-05-30").date)
        self.assertEqual(inst.combatZonePeriod[0].end.as_json(), "1983-05-30")
        self.assertEqual(inst.combatZonePeriod[0].start.date, FHIRDate("1983-02-15").date)
        self.assertEqual(inst.combatZonePeriod[0].start.as_json(), "1983-02-15")
        self.assertEqual(inst.date.date, FHIRDate("2012-05-02T14:10:00Z").date)
        self.assertEqual(inst.date.as_json(), "2012-05-02T14:10:00Z")
        self.assertEqual(inst.employmentStatus[0].code.coding[0].code, "224363007")
        self.assertEqual(inst.employmentStatus[0].code.coding[0].display, "Employed")
        self.assertEqual(inst.employmentStatus[0].code.coding[0].system, "http://snomed.info/sct")
        self.assertEqual(inst.employmentStatus[0].effective.start.date, FHIRDate("1980-04-01").date)
        self.assertEqual(inst.employmentStatus[0].effective.start.as_json(), "1980-04-01")
        self.assertEqual(inst.id, "example")
        self.assertEqual(inst.identifier.system, "https://acme.org/identifiers")
        self.assertEqual(inst.identifier.value, "1234")
        self.assertEqual(inst.pastOrPresentJob[0].effective.start.date, FHIRDate("1989-04-02").date)
        self.assertEqual(inst.pastOrPresentJob[0].effective.start.as_json(), "1989-04-02")
        self.assertEqual(inst.pastOrPresentJob[0].industry.coding[0].display, "Justice, public order, and safety activities")
        self.assertEqual(inst.pastOrPresentJob[0].industry.coding[0].system, "urn:oid:2.16.840.1.114222.4.5.315")
        self.assertEqual(inst.pastOrPresentJob[0].industry.text, "City police department")
        self.assertEqual(inst.pastOrPresentJob[0].occupation.coding[0].display, "Police and sheriff's patrol officers")
        self.assertEqual(inst.pastOrPresentJob[0].occupation.coding[0].system, "urn:oid:2.16.840.1.114222.4.5.314")
        self.assertEqual(inst.pastOrPresentJob[0].occupation.text, "Patrol officer")
        self.assertEqual(inst.pastOrPresentJob[0].supervisoryLevel.coding[0].system, "urn:oid:2.16.840.1.113883.10.20.22.4.224")
        self.assertEqual(inst.pastOrPresentJob[0].workClassification.coding[0].code, "452491000124108")
        self.assertEqual(inst.pastOrPresentJob[0].workClassification.coding[0].display, "Paid work in local government")
        self.assertEqual(inst.pastOrPresentJob[0].workClassification.coding[0].system, "http://snomed.info/sct")
        self.assertEqual(inst.pastOrPresentJob[0].workClassification.coding[0].version, "http://snomed.info/sct/731000124108")
        self.assertEqual(inst.pastOrPresentJob[0].workClassification.text, "Paid work, local government")
        self.assertEqual(inst.pastOrPresentJob[1].effective.end.date, FHIRDate("1989-04-01").date)
        self.assertEqual(inst.pastOrPresentJob[1].effective.end.as_json(), "1989-04-01")
        self.assertEqual(inst.pastOrPresentJob[1].effective.start.date, FHIRDate("1986-09-14").date)
        self.assertEqual(inst.pastOrPresentJob[1].effective.start.as_json(), "1986-09-14")
        self.assertEqual(inst.pastOrPresentJob[1].industry.coding[0].display, "Justice, public order, and safety activities")
        self.assertEqual(inst.pastOrPresentJob[1].industry.coding[0].system, "urn:oid:2.16.840.1.114222.4.5.315")
        self.assertEqual(inst.pastOrPresentJob[1].industry.text, "County sheriff's office")
        self.assertEqual(inst.pastOrPresentJob[1].occupation.coding[0].display, "Police and sheriff's patrol officers")
        self.assertEqual(inst.pastOrPresentJob[1].occupation.coding[0].system, "urn:oid:2.16.840.1.114222.4.5.314")
        self.assertEqual(inst.pastOrPresentJob[1].occupation.text, "Sheriff's patrol officer")
        self.assertEqual(inst.pastOrPresentJob[1].supervisoryLevel.coding[0].system, "urn:oid:2.16.840.1.113883.10.20.22.4.224")
        self.assertEqual(inst.pastOrPresentJob[1].workClassification.coding[0].code, "452491000124108")
        self.assertEqual(inst.pastOrPresentJob[1].workClassification.coding[0].display, "Paid work in local government")
        self.assertEqual(inst.pastOrPresentJob[1].workClassification.coding[0].system, "http://snomed.info/sct")
        self.assertEqual(inst.pastOrPresentJob[1].workClassification.coding[0].version, "http://snomed.info/sct/731000124108")
        self.assertEqual(inst.pastOrPresentJob[1].workClassification.text, "Paid work, local government")
        self.assertEqual(inst.pastOrPresentJob[2].effective.end.date, FHIRDate("1986-09-13").date)
        self.assertEqual(inst.pastOrPresentJob[2].effective.end.as_json(), "1986-09-13")
        self.assertEqual(inst.pastOrPresentJob[2].effective.start.date, FHIRDate("1986-06-08").date)
        self.assertEqual(inst.pastOrPresentJob[2].effective.start.as_json(), "1986-06-08")
        self.assertEqual(inst.pastOrPresentJob[2].industry.coding[0].display, "Justice, public order, and safety activities")
        self.assertEqual(inst.pastOrPresentJob[2].industry.coding[0].system, "urn:oid:2.16.840.1.114222.4.5.315")
        self.assertEqual(inst.pastOrPresentJob[2].industry.text, "County sheriff's office")
        self.assertEqual(inst.pastOrPresentJob[2].occupation.coding[0].display, "Police and sheriff's patrol officers")
        self.assertEqual(inst.pastOrPresentJob[2].occupation.coding[0].system, "urn:oid:2.16.840.1.114222.4.5.314")
        self.assertEqual(inst.pastOrPresentJob[2].occupation.text, "Police cadet")
        self.assertEqual(inst.pastOrPresentJob[2].supervisoryLevel.coding[0].system, "urn:oid:2.16.840.1.113883.10.20.22.4.224")
        self.assertEqual(inst.pastOrPresentJob[2].workClassification.coding[0].code, "452491000124108")
        self.assertEqual(inst.pastOrPresentJob[2].workClassification.coding[0].display, "Paid work in local government")
        self.assertEqual(inst.pastOrPresentJob[2].workClassification.coding[0].system, "http://snomed.info/sct")
        self.assertEqual(inst.pastOrPresentJob[2].workClassification.coding[0].version, "http://snomed.info/sct/731000124108")
        self.assertEqual(inst.pastOrPresentJob[2].workClassification.text, "Paid work, local government")
        self.assertEqual(inst.pastOrPresentJob[3].effective.end.date, FHIRDate("1986-06-07").date)
        self.assertEqual(inst.pastOrPresentJob[3].effective.end.as_json(), "1986-06-07")
        self.assertEqual(inst.pastOrPresentJob[3].effective.start.date, FHIRDate("1985-10-27").date)
        self.assertEqual(inst.pastOrPresentJob[3].effective.start.as_json(), "1985-10-27")
        self.assertEqual(inst.pastOrPresentJob[3].industry.coding[0].display, "U. S. Marines")
        self.assertEqual(inst.pastOrPresentJob[3].industry.coding[0].system, "urn:oid:2.16.840.1.114222.4.5.315")
        self.assertEqual(inst.pastOrPresentJob[3].industry.text, "US Marines")
        self.assertEqual(inst.pastOrPresentJob[3].occupation.coding[0].display, "Military, rank not specified")
        self.assertEqual(inst.pastOrPresentJob[3].occupation.coding[0].system, "urn:oid:2.16.840.1.114222.4.5.314")
        self.assertEqual(inst.pastOrPresentJob[3].occupation.text, "Rifleman (category: General Infantry)")
        self.assertEqual(inst.pastOrPresentJob[3].supervisoryLevel.coding[0].code, "E-4")
        self.assertEqual(inst.pastOrPresentJob[3].supervisoryLevel.coding[0].display, "US Military Enlisted paygrade E-4")
        self.assertEqual(inst.pastOrPresentJob[3].supervisoryLevel.coding[0].system, "urn:oid:2.16.840.1.113883.10.20.22.4.224")
        self.assertEqual(inst.pastOrPresentJob[3].workClassification.coding[0].code, "452121000124102")
        self.assertEqual(inst.pastOrPresentJob[3].workClassification.coding[0].display, "Paid work in United States armed forces ")
        self.assertEqual(inst.pastOrPresentJob[3].workClassification.coding[0].system, "http://snomed.info/sct")
        self.assertEqual(inst.pastOrPresentJob[3].workClassification.coding[0].version, "http://snomed.info/sct/731000124108")
        self.assertEqual(inst.pastOrPresentJob[3].workClassification.text, "Paid work, national armed forces")
        self.assertEqual(inst.pastOrPresentJob[4].effective.end.date, FHIRDate("1985-10-26").date)
        self.assertEqual(inst.pastOrPresentJob[4].effective.end.as_json(), "1985-10-26")
        self.assertEqual(inst.pastOrPresentJob[4].effective.start.date, FHIRDate("1983-09-18").date)
        self.assertEqual(inst.pastOrPresentJob[4].effective.start.as_json(), "1983-09-18")
        self.assertEqual(inst.pastOrPresentJob[4].industry.coding[0].display, "U. S. Marines")
        self.assertEqual(inst.pastOrPresentJob[4].industry.coding[0].system, "urn:oid:2.16.840.1.114222.4.5.315")
        self.assertEqual(inst.pastOrPresentJob[4].industry.text, "US Marines")
        self.assertEqual(inst.pastOrPresentJob[4].occupation.coding[0].display, "Military, rank not specified")
        self.assertEqual(inst.pastOrPresentJob[4].occupation.coding[0].system, "urn:oid:2.16.840.1.114222.4.5.314")
        self.assertEqual(inst.pastOrPresentJob[4].occupation.text, "Rifleman (category: General Infantry)")
        self.assertEqual(inst.pastOrPresentJob[4].supervisoryLevel.coding[0].code, "E-3")
        self.assertEqual(inst.pastOrPresentJob[4].supervisoryLevel.coding[0].display, "US Military Enlisted paygrade E-3")
        self.assertEqual(inst.pastOrPresentJob[4].supervisoryLevel.coding[0].system, "urn:oid:2.16.840.1.113883.10.20.22.4.224")
        self.assertEqual(inst.pastOrPresentJob[4].workClassification.coding[0].code, "452121000124102")
        self.assertEqual(inst.pastOrPresentJob[4].workClassification.coding[0].display, "Paid work in United States armed forces ")
        self.assertEqual(inst.pastOrPresentJob[4].workClassification.coding[0].system, "http://snomed.info/sct")
        self.assertEqual(inst.pastOrPresentJob[4].workClassification.coding[0].version, "http://snomed.info/sct/731000124108")
        self.assertEqual(inst.pastOrPresentJob[4].workClassification.text, "Paid work, national armed forces")
        self.assertEqual(inst.pastOrPresentJob[5].effective.end.date, FHIRDate("1983-08-17").date)
        self.assertEqual(inst.pastOrPresentJob[5].effective.end.as_json(), "1983-08-17")
        self.assertEqual(inst.pastOrPresentJob[5].effective.start.date, FHIRDate("1983-01-16").date)
        self.assertEqual(inst.pastOrPresentJob[5].effective.start.as_json(), "1983-01-16")
        self.assertEqual(inst.pastOrPresentJob[5].industry.coding[0].display, "U. S. Marines")
        self.assertEqual(inst.pastOrPresentJob[5].industry.coding[0].system, "urn:oid:2.16.840.1.114222.4.5.315")
        self.assertEqual(inst.pastOrPresentJob[5].industry.text, "US Marines")
        self.assertEqual(inst.pastOrPresentJob[5].occupation.coding[0].display, "Military, rank not specified")
        self.assertEqual(inst.pastOrPresentJob[5].occupation.coding[0].system, "urn:oid:2.16.840.1.114222.4.5.314")
        self.assertEqual(inst.pastOrPresentJob[5].occupation.text, "Rifleman (category: General Infantry)")
        self.assertEqual(inst.pastOrPresentJob[5].supervisoryLevel.coding[0].code, "E-2")
        self.assertEqual(inst.pastOrPresentJob[5].supervisoryLevel.coding[0].display, "US Military Enlisted paygrade E-2")
        self.assertEqual(inst.pastOrPresentJob[5].supervisoryLevel.coding[0].system, "urn:oid:2.16.840.1.113883.10.20.22.4.224")
        self.assertEqual(inst.pastOrPresentJob[5].workClassification.coding[0].code, "452121000124102")
        self.assertEqual(inst.pastOrPresentJob[5].workClassification.coding[0].display, "Paid work in United States armed forces ")
        self.assertEqual(inst.pastOrPresentJob[5].workClassification.coding[0].system, "http://snomed.info/sct")
        self.assertEqual(inst.pastOrPresentJob[5].workClassification.coding[0].version, "http://snomed.info/sct/731000124108")
        self.assertEqual(inst.pastOrPresentJob[5].workClassification.text, "Paid work, national armed forces")
        self.assertEqual(inst.pastOrPresentJob[6].effective.end.date, FHIRDate("1983-01-15").date)
        self.assertEqual(inst.pastOrPresentJob[6].effective.end.as_json(), "1983-01-15")
        self.assertEqual(inst.pastOrPresentJob[6].effective.start.date, FHIRDate("1982-06-06").date)
        self.assertEqual(inst.pastOrPresentJob[6].effective.start.as_json(), "1982-06-06")
        self.assertEqual(inst.pastOrPresentJob[6].industry.coding[0].display, "U. S. Marines")
        self.assertEqual(inst.pastOrPresentJob[6].industry.coding[0].system, "urn:oid:2.16.840.1.114222.4.5.315")
        self.assertEqual(inst.pastOrPresentJob[6].industry.text, "US Marines")
        self.assertEqual(inst.pastOrPresentJob[6].occupation.coding[0].display, "Military, rank not specified")
        self.assertEqual(inst.pastOrPresentJob[6].occupation.coding[0].system, "urn:oid:2.16.840.1.114222.4.5.314")
        self.assertEqual(inst.pastOrPresentJob[6].occupation.text, "Basic Marine (category: General, Not Occupationally Qualified)")
        self.assertEqual(inst.pastOrPresentJob[6].supervisoryLevel.coding[0].code, "E-1")
        self.assertEqual(inst.pastOrPresentJob[6].supervisoryLevel.coding[0].display, "US Military Enlisted paygrade E-1")
        self.assertEqual(inst.pastOrPresentJob[6].supervisoryLevel.coding[0].system, "urn:oid:2.16.840.1.113883.10.20.22.4.224")
        self.assertEqual(inst.pastOrPresentJob[6].workClassification.coding[0].code, "452121000124102")
        self.assertEqual(inst.pastOrPresentJob[6].workClassification.coding[0].display, "Paid work in United States armed forces ")
        self.assertEqual(inst.pastOrPresentJob[6].workClassification.coding[0].system, "http://snomed.info/sct")
        self.assertEqual(inst.pastOrPresentJob[6].workClassification.coding[0].version, "http://snomed.info/sct/731000124108")
        self.assertEqual(inst.pastOrPresentJob[6].workClassification.text, "Paid work, national armed forces")
        self.assertEqual(inst.pastOrPresentJob[7].effective.end.date, FHIRDate("1982-06-05").date)
        self.assertEqual(inst.pastOrPresentJob[7].effective.end.as_json(), "1982-06-05")
        self.assertEqual(inst.pastOrPresentJob[7].effective.start.date, FHIRDate("1980-04-01").date)
        self.assertEqual(inst.pastOrPresentJob[7].effective.start.as_json(), "1980-04-01")
        self.assertEqual(inst.pastOrPresentJob[7].industry.coding[0].display, "Restaurants and other food services")
        self.assertEqual(inst.pastOrPresentJob[7].industry.coding[0].system, "urn:oid:2.16.840.1.114222.4.5.315")
        self.assertEqual(inst.pastOrPresentJob[7].industry.text, "Fast food restaurant")
        self.assertEqual(inst.pastOrPresentJob[7].occupation.coding[0].display, "Combined food preparation and serving workers, including fast food")
        self.assertEqual(inst.pastOrPresentJob[7].occupation.coding[0].system, "urn:oid:2.16.840.1.114222.4.5.314")
        self.assertEqual(inst.pastOrPresentJob[7].occupation.text, "Fast food worker")
        self.assertEqual(inst.pastOrPresentJob[7].supervisoryLevel.coding[0].system, "urn:oid:2.16.840.1.113883.10.20.22.4.224")
        self.assertEqual(inst.pastOrPresentJob[7].workClassification.coding[0].code, "452141000124109")
        self.assertEqual(inst.pastOrPresentJob[7].workClassification.coding[0].display, "Paid work not self-employed")
        self.assertEqual(inst.pastOrPresentJob[7].workClassification.coding[0].system, "http://snomed.info/sct")
        self.assertEqual(inst.pastOrPresentJob[7].workClassification.coding[0].version, "http://snomed.info/sct/731000124108")
        self.assertEqual(inst.pastOrPresentJob[7].workClassification.text, "Paid work, not self-employed")
        self.assertEqual(inst.status, "active")
        self.assertEqual(inst.text.status, "generated")
        self.assertEqual(inst.usualWork.duration.code, "a")
        self.assertEqual(inst.usualWork.duration.system, "http://unitsofmeasure.org")
        self.assertEqual(inst.usualWork.duration.unit, "years")
        self.assertEqual(inst.usualWork.duration.value, 31)
        self.assertEqual(inst.usualWork.industry.coding[0].display, "Justice, public order, and safety activities")
        self.assertEqual(inst.usualWork.industry.coding[0].system, "urn:oid:2.16.840.1.114222.4.5.315")
        self.assertEqual(inst.usualWork.industry.text, "City police department")
        self.assertEqual(inst.usualWork.occupation.coding[0].display, "Police and sheriff's patrol officers")
        self.assertEqual(inst.usualWork.occupation.coding[0].system, "urn:oid:2.16.840.1.114222.4.5.314")
        self.assertEqual(inst.usualWork.occupation.text, "Patrol officer")
        self.assertEqual(inst.usualWork.start.date, FHIRDate("1986").date)
        self.assertEqual(inst.usualWork.start.as_json(), "1986")

